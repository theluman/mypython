函数是python为了代码最大程度的重用和最小化代码冗余而提供的基本程序结构
函数是一种设计工具，它能让程序员将复杂的系统分解为可管理的部件
函数将相关功能打包并参数化
python中可以创建4种函数：
  全局函数：定义在模块中
  局部函数：嵌套于其他函数中
  lambda函数（匿名函数）：表达式
  方法：与特定数据类型关联的函数，并且只能与数据类型关联一起使用
python提供了很多内置函数


def functiom[()|(arguements)]:
    suite

def functiom[()|(arguements)]:
    suite
    returm value

def是一个可执行语句：
  因此可以出现在任何能够使用语句的地方，甚至可以嵌套于其他语句如if,while,但不能再如[],{},()中
每个python函数都可以有一个返回值，默认为NONE,也可以使用“return value” 明确定义返回值，return会输出信息，返回多个值，彼此间使用逗号分隔，且返回对象为一个元组

callable(name) 用来测试是否可调用
def语句会创建一个函数对象，并同时创建一个指向函数的对象引用
  函数也是对象，可以存储在组合数据类型中，也可以作为参数传递给其他函数
  callable() 测试

def testFunc():
    pass

pass占位

函数：
  名称空间（作用域）
python创建，改变或查找变量名都是在名称空间中进行
 变量名解析法则
在代码中变量名被赋值的位置决定了其能被访问到的范围
函数定义了本地作用域，而模块定义了全局作用域
  每个模块都是一个全局作用域，因此，全局作用域的范围仅限于单个程序文件
  每次对函数的调用都会创建一个新的本地作用域，赋值的变量除非声明为全局变量（global x;x = 2）,否则均为本地变量
  所有的变量名都可以归纳为本地，全局或内置（由__builtin__模块提供）

变量名解析：LEGB原则
变量名引用分三个作用域进行，首先是本地，之后是函数内，接着是全局，最后是内置
built-in(python)
  global(module)
    endosing function locals
       local(function)

